# # This is a basic workflow to help you get started with Actions

# name: CI CD

# # Controls when the action will run. 
# on:
#   # Triggers the workflow on push or pull request events but only for the $default-branch branch
#   push:
#     branches: [ $default-branch ]
#   pull_request:
#     branches: [ $default-branch ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

name: automate deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged 
        ports:
          - 2375:2375
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose -f Docker-compose.yml build
          docker-compose -f Docker-compose.yml push

      - name: Deploy to server
        env:
          DOCKER_HOST: tcp://<YOUR_SERVER_IP>:2375
        run: |
          docker-compose -f Docker-compose.yml pull
          docker-compose -f Docker-compose.yml up -d --remove-orphans

# name: GitHub Action

# on:
#   push:
#     branches:
#       - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
          
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/sitst-client.ovpn
          username: ${{ secrets.OVPN_USERNAME }}
          password: ${{ secrets.OVPN_PASSWORD }}
      - name: Use SSH and Compose Up
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" << 'EOF'
            source ~/env.sh
            cd ${{ secrets.WORK_DIR }}
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull
            docker compose down
            docker compose up -d --build
          EOF

